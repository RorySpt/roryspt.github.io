<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[Learn OpenGL] 项目详情</title>
      <link href="/2023/07/04/learn-opengl/project-details/"/>
      <url>/2023/07/04/learn-opengl/project-details/</url>
      
        <content type="html"><![CDATA[<h1 id="组织"><a href="#组织" class="headerlink" title="组织"></a>组织</h1><p>项目sandbox包含以下内容</p><ul><li>display window 封装了窗口相关内容，包含opengl初始化，GLFW初始化，IMGUI初始化，窗口事件等</li><li>render 实现渲染相关内容，具体绘制</li><li>world 代表场景，存放光源（lightsource）、相机（camera）、渲染实体（model）等，它们都以actor实现</li><li>actor 放置在场景里面的所有实体都是actor</li><li>lightsource 对光源的抽象</li><li>camera 对相机的抽象，每个相机对应一个render </li><li>model 可绘制模型</li><li>shader 着色器的抽象，包含顶点着色器和片段着色器</li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
          <category> Learn OpenGL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
            <tag> Learn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Learn OpenGL] 基础知识</title>
      <link href="/2023/07/04/learn-opengl/basic-knowledge/"/>
      <url>/2023/07/04/learn-opengl/basic-knowledge/</url>
      
        <content type="html"><![CDATA[<h1 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h1><h2 id="缓冲绑定点是什么？"><a href="#缓冲绑定点是什么？" class="headerlink" title="缓冲绑定点是什么？"></a>缓冲绑定点是什么？</h2><p>缓冲绑定点是OpenGL中用于绑定缓冲对象的位置或目标。缓冲对象可以存储各种类型的数据，如顶点数据、索引数据、Uniform数据等。缓冲绑定点提供了一种将指定类型的缓冲对象与特定的目标位置相关联的方式，使得OpenGL可以正确地使用这些缓冲对象中的数据。</p><p>在OpenGL中，常见的缓冲绑定点包括：</p><ol><li>顶点缓冲对象绑定点（Vertex Buffer Object Binding Point）：用于将顶点缓冲对象绑定到顶点属性的位置，以供顶点着色器读取顶点数据。</li><li>索引缓冲对象绑定点（Index Buffer Object Binding Point）：用于将索引缓冲对象绑定到绘制命令中的索引数据位置，以供绘制命令使用。</li><li>Uniform缓冲对象绑定点（Uniform Buffer Object Binding Point）：用于将Uniform缓冲对象绑定到着色器程序中的Uniform变量位置，以供着色器程序读取Uniform数据。</li><li>纹理缓冲对象绑定点（Texture Buffer Object Binding Point）：用于将纹理缓冲对象绑定到纹理单元，以供着色器程序读取纹理数据。</li></ol><p>在使用缓冲对象时，我们需要将缓冲对象绑定到相应的缓冲绑定点上，这样OpenGL才能正确地使用缓冲对象中的数据。而绑定缓冲对象则是通过使用对应的glBindBuffer函数实现的。</p><h2 id="opengl状态机内部数据是如何分布的？"><a href="#opengl状态机内部数据是如何分布的？" class="headerlink" title="opengl状态机内部数据是如何分布的？"></a>opengl状态机内部数据是如何分布的？</h2><p>OpenGL的内部状态由一系列数据和状态变量组成，这些变量存储了OpenGL的各种配置选项、当前绑定的对象和各种状态信息。下面是一些常见的OpenGL状态：</p><ol><li>渲染管线状态（Pipeline State）：包括顶点输入状态、光栅化状态、片段处理状态等。这些状态存储了OpenGL的渲染管线各个阶段的配置选项和设置。</li><li>缓冲绑定状态（Buffer Binding State）：存储了顶点缓冲对象、索引缓冲对象和Uniform缓冲对象等的绑定信息。这些状态记录了当前绑定的缓冲对象的相关属性和数据。</li><li>纹理绑定状态（Texture Binding State）：存储了纹理对象的绑定信息，包括2D纹理、立方体贴图、多重采样纹理等。这些状态记录了当前绑定的纹理对象的相关属性和数据。</li><li>着色器程序状态（Shader Program State）：存储了当前着色器程序的相关信息，包括顶点着色器、片段着色器、几何着色器等。这些状态记录了当前使用的着色器程序的相关属性和数据。</li><li>内存管理状态（Memory Management State）：存储了OpenGL中的内存对象，包括帧缓冲对象、渲染缓冲对象等。这些状态记录了当前内存对象的相关属性和数据。</li><li>视口状态（Viewport State）：存储了OpenGL绘制的视口的相关信息，包括视口的位置和大小。这些状态记录了当前视口的相关属性和数据。</li></ol><p>这些状态和数据被保存在OpenGL当前的上下文中。当我们使用OpenGL API来修改这些状态时，实际上是在修改当前上下文中的对应变量的值。因此，在使用OpenGL时，我们通常会对这些状态进行配置和修改，以达到期望的渲染效果。</p><p>当我们使用OpenGL进行渲染时，需要对一些重要的状态进行配置和修改，以控制渲染的各个方面。下面是一些常见的OpenGL状态的详细说明：</p><ol><li>渲染管线状态（Pipeline State）：包括顶点输入状态、光栅化状态、片段处理状态等。顶点输入状态包括顶点属性缓冲对象的绑定、顶点属性的格式和布局等。光栅化状态包括光栅化模式、剔除模式、多边形模式等。片段处理状态包括混合模式、深度测试、模板测试等。通过配置这些状态，我们可以控制渲染管线各个阶段的行为。</li><li>缓冲绑定状态（Buffer Binding State）：存储了顶点缓冲对象、索引缓冲对象和Uniform缓冲对象的绑定信息。顶点缓冲对象用于存储顶点数据，索引缓冲对象用于存储索引数据，Uniform缓冲对象用于存储着色器程序中的Uniform变量数据。通过绑定不同的缓冲对象，我们可以在渲染时使用不同的数据。</li><li>纹理绑定状态（Texture Binding State）：存储了纹理对象的绑定信息，包括2D纹理、立方体贴图、多重采样纹理等。纹理对象用于存储图像数据，我们可以通过绑定不同的纹理对象来渲染不同的纹理。</li><li>着色器程序状态（Shader Program State）：存储了当前着色器程序的相关信息，包括顶点着色器、片段着色器、几何着色器等。通过配置这些着色器程序，我们可以自定义渲染的算法和效果。</li><li>内存管理状态（Memory Management State）：存储了OpenGL中的内存对象，包括帧缓冲对象、渲染缓冲对象等。通过配置这些内存对象，我们可以定义渲染的目标和方式。</li><li>视口状态（Viewport State）：存储了OpenGL绘制的视口的相关信息，包括视口的位置和大小。通过配置视口，我们可以控制渲染的输出区域和分辨率。</li></ol><p>这些状态的配置和修改通常通过OpenGL API的函数来实现。在使用OpenGL时，我们需要根据具体的需求和场景，对这些状态进行适当的配置和修改，以获得期望的渲染效果。同时，我们还可以通过查询OpenGL的当前状态，了解当前渲染的相关信息，以便进行调试和优化。</p>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
          <category> Learn OpenGL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
            <tag> Learn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>modern c++ usages</title>
      <link href="/2023/07/03/modern-cpp/modern-cpp-usages/"/>
      <url>/2023/07/03/modern-cpp/modern-cpp-usages/</url>
      
        <content type="html"><![CDATA[<h1 id="时间日期（chrono）"><a href="#时间日期（chrono）" class="headerlink" title="时间日期（chrono）"></a>时间日期（chrono）</h1><h2 id="打印当前时间"><a href="#打印当前时间" class="headerlink" title="打印当前时间"></a>打印当前时间</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> std::chrono::zoned_time cur_time&#123; std::chrono::<span class="built_in">current_zone</span>(),</span><br><span class="line">std::chrono::system_clock::<span class="built_in">now</span>() &#125;;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt; std::format(<span class="string">&quot;&#123;:L%F %H:%M:%OS  %z %Z &#125;\n&quot;</span>, cur_time);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>格式化参考 <a href="https://zh.cppreference.com/w/cpp/chrono/system_clock/formatter">std::formatter - cppreference.com</a></p></li><li><p>时间类参考 <a href="https://zh.cppreference.com/w/cpp/chrono/system_clock">cppreference&#x2F;cpp&#x2F;chrono&#x2F;system_clock</a></p></li><li><p>时区类参考</p><p><a href="https://runebook.dev/zh/docs/cpp/chrono/current_zone">runebook&#x2F;cpp&#x2F;chrono&#x2F;current_zone</a></p><p><a href="https://zh.cppreference.com/w/cpp/chrono/current_zone">cppreference&#x2F;cpp&#x2F;chrono&#x2F;current_zone</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
          <category> Learn c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Learn </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人项目</title>
      <link href="/2023/06/27/myproject/"/>
      <url>/2023/06/27/myproject/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><hr><h2 id="毕业设计功能展示——多功能万年历的设计"><a href="#毕业设计功能展示——多功能万年历的设计" class="headerlink" title="毕业设计功能展示——多功能万年历的设计"></a>毕业设计功能展示——多功能万年历的设计</h2><iframe src="//player.bilibili.com/player.html?aid=455175341&bvid=BV1A5411t7hz&cid=177837592&page=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="c-太空射手"><a href="#c-太空射手" class="headerlink" title="c++ 太空射手"></a>c++ 太空射手</h2><iframe src="//player.bilibili.com/player.html?aid=374486044&bvid=BV1LZ4y1P7Rk&cid=303106721&page=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="【OpenGL学习】动态光源"><a href="#【OpenGL学习】动态光源" class="headerlink" title="【OpenGL学习】动态光源"></a>【OpenGL学习】动态光源</h2><iframe src="//player.bilibili.com/player.html?aid=431241471&bvid=BV1XG41177LC&cid=850345263&page=1&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Learn OpenGL] 项目配置</title>
      <link href="/2023/06/27/learn-opengl/project-setting/"/>
      <url>/2023/06/27/learn-opengl/project-setting/</url>
      
        <content type="html"><![CDATA[<p><strong><a href="https://gitee.com/roryspt/opengl-learn/tree/opengl-learn-old">项目地址</a></strong></p><span id="more"></span><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li><p>找到了glfw模块但是对应的变量没有定义</p><p>使用以下代码</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(glfw3 CONFIG REQUIRED)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(sandbox PRIVATE glfw)</span><br><span class="line"></span><br><span class="line"><span class="keyword">message</span>(GLFW_FOUND <span class="variable">$&#123;GLFW_FOUND&#125;</span>)</span><br><span class="line"><span class="keyword">message</span>(GLFW_INCLUDE_DIR <span class="variable">$&#123;GLFW_INCLUDE_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">message</span>(GLFW_SOURCES <span class="variable">$&#123;GLFW_SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">message</span>(GLFW3_FOUND <span class="variable">$&#123;GLFW3_FOUND&#125;</span>)</span><br><span class="line"><span class="keyword">message</span>(GLFW3_INCLUDE_DIR <span class="variable">$&#123;GLFW3_INCLUDE_DIR&#125;</span>)</span><br><span class="line"><span class="keyword">message</span>(GLFW3_SOURCES <span class="variable">$&#123;GLFW3_SOURCES&#125;</span>)</span><br></pre></td></tr></table></figure><p>message里的变量都为空，但是<code>target_link_libraries(sandbox PRIVATE glfw)</code>能够成功执行</p><p>glfw库使用以下命令安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vcpkg install glfw3:x64<span class="literal">-windows</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="CMake使用经验"><a href="#CMake使用经验" class="headerlink" title="CMake使用经验"></a>CMake使用经验</h1><ol><li><p>用文件夹来组织目标 (target)</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set_property</span>(GLOBAL PROPERTY USE_FOLDERS <span class="keyword">ON</span>)</span><br></pre></td></tr></table></figure></li><li><p>修改source_group时，vs需要重新打开才能看到效果</p></li><li><p>多核编译</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_compile_options</span>(<span class="keyword">target</span> PUBLIC <span class="string">&quot;/MP&quot;</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
          <category> Learn OpenGL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenGL </tag>
            
            <tag> Learn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初次建站</title>
      <link href="/2023/06/24/homepage/"/>
      <url>/2023/06/24/homepage/</url>
      
        <content type="html"><![CDATA[<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><h3 id="学习中"><a href="#学习中" class="headerlink" title="学习中"></a>学习中</h3><p> <a href="https://zhuanlan.zhihu.com/p/106060640">个人博客第8篇——优化主题（持续更新）</a><br> <a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细）</a><br> <a href="https://hexo.io/zh-cn/docs/configuration">hexo&#x2F;docs&#x2F;configuration</a><br> <a href="https://theme-next.js.org/docs/getting-started/">NexT&#x2F;Getting Started</a><br> <a href="https://hexo-next.readthedocs.io/zh_CN/latest/">hexo-next&#x2F;readthedocs</a></p><h3 id="网站备注"><a href="#网站备注" class="headerlink" title="网站备注"></a>网站备注</h3><p> <a href="https://fontawesome.com/">Font Awesome</a> —— 图标网站</p><p> <a href="https://smms.app/">SMMS</a> —— 图床网站</p><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><!-- ![background.jpg](https://s2.loli.net/2023/06/24/RODohqMeJjZXxw6.jpg)--><img src="https://s2.loli.net/2023/06/24/RODohqMeJjZXxw6.jpg" style="width:95%; border-radius: 20px;overflow: hidden;" />]]></content>
      
      
      <categories>
          
          <category> Learn </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/23/hello-world/"/>
      <url>/2023/06/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
